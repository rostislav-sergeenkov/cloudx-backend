service: backend-product-service
frameworkVersion: '3'

provider:
  name: aws
  profile: default
  runtime: nodejs16.x
  region: eu-west-1
  stage: dev
  environment:
    TABLE_STOCKS: cloudx_be_stocks
    TABLE_PRODUCTS: cloudx_be_products
    SQS_QUEUE:
      Ref: catalogItemsQueue
    SNS_TOPIC:
      Ref: ProductTopic

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "Fn::GetAtt": [cloudxBeProducts, Arn]
            - "Fn::GetAtt": [cloudxBeStocks, Arn]
        - Effect: Allow
          Action: "sqs:*"
          Resource:
            - Fn::GetAtt: [catalogItemsQueue, Arn]
        - Effect: Allow
          Action: "sns:*"
          Resource:
            Ref: ProductTopic

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true

  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: false

  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn

  getApiDocs:
    handler: handler.getApiDocs
    events:
      - http:
          path: openapi
          method: get
          cors: true

resources:
  Resources:
    cloudxBeProducts:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_PRODUCTS}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2

    cloudxBeStocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_STOCKS}
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: N
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2

    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: cloudx_products_simple_queue
    ProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: cloudx_products_sns_topic
    ProductTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: rostislav.sergeenkov@gmail.com
        TopicArn:
          Ref: ProductTopic
