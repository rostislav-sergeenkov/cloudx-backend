service: backend-product-service
frameworkVersion: '3'

provider:
  name: aws
  profile: default
  runtime: nodejs16.x
  region: eu-west-1
  stage: dev

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
    environment:
      TABLE_STOCKS: cloudx_be_stocks
      TABLE_PRODUCTS: cloudx_be_products

  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: false
    environment:
      TABLE_STOCKS: cloudx_be_stocks
      TABLE_PRODUCTS: cloudx_be_products

  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
    environment:
      TABLE_STOCKS: cloudx_be_stocks
      TABLE_PRODUCTS: cloudx_be_products

  getApiDocs:
    handler: handler.getApiDocs
    events:
      - http:
          path: openapi
          method: get
          cors: true

resources:
  Resources:
    cloudxBeProducts:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: cloudx_be_products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2

    cloudxBeStocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: cloudx_be_stocks
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: N
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
